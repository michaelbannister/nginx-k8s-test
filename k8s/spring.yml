---
kind: Service
apiVersion: v1
metadata:
  name: spring
  namespace: nginx-test
spec:
  type: NodePort
  selector:
    tier: spring
  ports:
  - port: 8080
    name: http

---
kind: ConfigMap
apiVersion: v1
metadata:
  name: spring-config
  namespace: nginx-test
data:
  application.properties: |
    spring.main.banner-mode: off
    # management.port=8081
    management.context-path=/private
    management.security.enabled=false

---
kind: Deployment
apiVersion: apps/v1beta1
metadata:
  name: spring
  namespace: nginx-test
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        tier: spring
    spec:
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      containers:
      - name: spring-jetty
        image: michaelbannister/spring-jetty:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        env:
        - name: JVM_OPTS
          value: >-
            -Xms768m
            -Xmx768m
        # readinessProbe:
        #   periodSeconds: 10 # default
        #   timeoutSeconds: 1 # default
        #   failureThreshold: 3 # default
        #   successThreshold: 1 # default
        #   httpGet:
        #     path: /private/health
        #     port: 8081
        resources:
          requests:
            memory: "1.5Gi"
            cpu: "400m"
        securityContext:
          readOnlyRootFilesystem: true
        volumeMounts:
          - name: config-volume
            mountPath: /opt/spring/application.properties
            subPath: application.properties
          - name: app-tmp-volume
            mountPath: /tmp
      volumes:
      - name: config-volume
        configMap:
          name: spring-config
      - name: app-tmp-volume
        emptyDir: {}
