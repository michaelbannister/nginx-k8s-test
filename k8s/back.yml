---
kind: Service
apiVersion: v1
metadata:
  name: nginx-back
  namespace: nginx-test
spec:
  type: NodePort
  selector:
    tier: back
  ports:
  - port: 80
    name: http
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: back-config
  namespace: nginx-test
data:
  nginx.conf: |
    user  nginx;
    worker_processes  1;

    error_log  /var/log/nginx/error.log warn;
    pid        /var/run/nginx.pid;

    events {
        worker_connections  1024;
    }

    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;

        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';

        access_log  /var/log/nginx/access.log  main;

        sendfile        on;
        #tcp_nopush     on;

        keepalive_timeout  65;

        #gzip  on;

        include /etc/nginx/conf.d/*.conf;
    }
  default.conf: |
    server {
        listen       80;
        server_name  localhost;

        location / {
            proxy_pass http://spring:8080;
        }

        location /status {
            stub_status;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
    }

---
kind: Deployment
apiVersion: apps/v1beta1
metadata:
  name: nginx-back
  namespace: nginx-test
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        tier: back
    spec:
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      containers:
      - name: nginx-back
        image: nginx:1.13.8-alpine
        ports:
        - containerPort: 80
        readinessProbe:
          periodSeconds: 10 # default
          timeoutSeconds: 1 # default
          failureThreshold: 3 # default
          successThreshold: 1 # default
          httpGet:
            path: /status
            port: 80
        resources:
          requests:
            memory: "500Mi"
            cpu: "200m"
          limits:
            memory: "500Mi"
            cpu: "200m"
        securityContext:
          readOnlyRootFilesystem: true
        volumeMounts:
          - name: cache-volume
            mountPath: /var/cache/nginx
          - name: config-volume
            mountPath: /etc/nginx/nginx.conf
            subPath: nginx.conf
          - name: config-volume
            mountPath: /etc/nginx/conf.d/default.conf
            subPath: conf.d/default.conf
          - name: run-volume
            mountPath: /var/run
      volumes:
      - name: cache-volume
        emptyDir: {}
      - name: run-volume
        emptyDir: {}
      - name: config-volume
        configMap:
          name: back-config
          items:
          - key: nginx.conf
            path: nginx.conf
          - key: default.conf
            path: conf.d/default.conf
